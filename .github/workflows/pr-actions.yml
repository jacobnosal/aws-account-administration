name: pull-request-actions

on: [pull_request]

jobs:
  
  plan_and_inform:
    name: Terraform Plan and Post Results
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@main

    - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.7

    - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Initialize Terraform
      run: |
        terraform init

    - name: Plan Terraform
      id: plan
      continue-on-error: true
      run: |
        terraform plan -input=false -no-color -out=tfplan \
        && terraform show -no-color tfplan          

    # Sed is taking all lines that begin with one or more spaces followed by a `+` or `-`.
    # It stores the amount of spaces in `\1` and the +/- in `\2`.
    # Then replace that portion of the line with `\2\1` (+/- followed by the number of matched spaces).
    - name: Reformat Plan
      if: steps.plan.outcome == 'success'
      run: |
        echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
        | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt          

    - name: Put Plan in Env Var
      if: steps.plan.outcome == 'success'
      run: |
        PLAN=$(cat plan.txt)
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "$PLAN" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV  
    
    - name: Post Plan and Apply to GitHub PR
      if: steps.plan.outcome == 'success' && steps.apply.outcome == 'success'
      uses: mshick/add-pr-comment@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          Applying **${{ matrix.path }}**:

          ```diff
          ${{ env.PLAN }}
          ```      

    - name: Post Plan Failure
      if: steps.plan.outcome == 'failure'
      uses: mshick/add-pr-comment@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          Plan failed for **${{ matrix.path }}**:

          ```
          ${{ steps.plan.outputs.stderr }}
          ```    